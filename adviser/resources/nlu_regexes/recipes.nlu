
# ----------------------
# user informable slots 
# ----------------------

rule inform(ingredients)
    "I {mod_syn()} to {cook_syn()} {recipe_syn()} (with|having|that includes|that contains|using|that uses) {ingredients}"
    "(can you )?{suggest_syn()}( me)? {recipe_syn()} (from cookbook )?(with|having|that (has|contains|includes|uses|makes use of)) {ingredients}"
    "Do you (have|know( of)?) ((a|some) recipes?|something|a meal) (that (includes|uses|has)|with) {ingredients}"
    "Whats a {recipe_syn()} with {ingredients}s?"
    "For (which|what) {recipe_syn()} can I use {ingredients}s?"
    "(what|which) {recipe_syn()} can I use {ingredients}s? for"
    "(and )?(it|the recipe|the meal) should (also )?(contain|have|use|include) {ingredients}"

rule inform(ease)
    "{suggest_syn()}( me)?( some| an?)? {recipe_syn()} (that|which) is {ease}"
    "I {mod_syn()} to {cook_syn()} something that is {ease}( to make)?"
    "I {mod_syn()} to {cook_syn()} (a|an) {ease} recipe"
    "I {mod_syn()} to {cook_syn()} a {recipe_syn()} (that|which) is (quite )?{ease}"
    "Do you have a {recipe_syn()} that is {ease} to {cook_syn()}"
    "I {mod_syn()} to {cook_syn()} something {ease}"
    "{mod_syn()} be {ease} to {cook_syn()}"


rule inform(cookbook)
    "I want to {cook_syn()} something from {cookbook}"
    "{suggest_syn()} me some {recipe_syn()} from {cookbook}?"
    "I want to {cook_syn()} a {recipe_syn()} from {cookbook}"

rule inform(notes)
    "(Suggest|Tell|Give) me a {recipe_syn()} (that|which) (has|is) {notes}"
    "I want to {cook_syn()} a {recipe_syn()} (that|which) is {notes}"
    "I want to {cook_syn()} a {recipe_syn()} (that|which) is similar to {notes}"
    "I want to {cook_syn()} a {recipe_syn()} (that|which) follows {notes}"

rule inform(name)
    "I want to {cook_syn()} {name}"
    "^{name}$"
    "Tell me how to {cook_syn()} {name}"
    "I (shall )?(pick|choose) {name}"
    "I (choose|pick|would like) the {name}"
    "do you have the {recipe_syn()} for {name}"


rule inform(prep_time)
    "(Do you have|{suggest_syn()})( a)?{recipe_syn()} to {cook_syn()} in {prep_time} minutes"
    "I want to {cook_syn()} something (quickly )?in {prep_time} (under )?minutes"
    "{suggest_syn()} a {recipe_syn()} (that|which) can be (cooked|done|last_made|prepared|finished) in (under )?{prep_time} minutes"


rule inform(type)
    "I want to {cook_syn()} some {type} {recipe_syn()}"
    "I want to {cook_syn()} (a )?{type}"
    "Do you have a {recipe_syn()} for (a )?{type}"
    "{suggest_syn()} (me )? a recipe for {type}"

rule inform(rating)
    "I want to cook something rated with {rating} stars"
    "I want to cook something with {rating} star rating"
    "{suggest_syn()} (me )? a {recipe_syn()} (with|having) {rating} star rating"
    "{suggest_syn()} (me )? a {recipe_syn()} (with|having) {rating} star(s)?"
    "{suggest_syn()} (me )?(a )?{rating} star rating {recipe_syn()}"
    "Do you have a {recipe_syn()} with {rating} stars"
    "Do you have a {rating} star rated {recipe_syn()}"

    



# ----------------------
# Requestable slots
# ----------------------

rule request(name)
    "what is the name of that {recipe_syn()}"
    "what's the name( again)? of that {recipe_syn()}"
    "can you tell me (the|its) name again"
    "what is (the|its) name"
    "what's (the|its) name"

rule request(prep_time)
    "what is the (prep(aration)?|cooking) time of this {recipe_syn()}" 
    "what's the (prep(aration)?|cooking) time of this {recipe_syn()}" 
    "how (long|much time|many minutes) ((does|will|would) )?(it|(that|this)( {recipe_syn()})?) take"
    "is (this|that) {recipe_syn()} (quick|fast|slow) to {cook_syn()}"

rule request(cookbook)
    "(from )?(which|what) (cook ?)?book is ((this|that|the) {recipe_syn()}|it) (from|in)"
    "where can i find ((this|that|the) {recipe_syn()}|it)"
    "in which (cook ?)?book can i find ((this|that|the) {recipe_syn()}|it)"

rule request(page)
    "on (which|what) page of the (cook ?)?book is this {recipe_syn()}"
    "where in the (cook ?)?book can I find ((this|that|the) {recipe_syn()}|it)"

rule request(ingredients)
    "what are the ingredients( of this {recipe_syn()})?"
    "what are its ingredients"
    "what (will|do) i need( for (that|this)( {recipe_syn()})?)?"
    "(can you )?list( me)? the ingredients"
    "what do i need for (this|that|the) {recipe_syn()}"

rule request(last_made)
    "when did I last make this {recipe_syn()}"

rule request(ease)
    "how (easy|hard|simple|difficult) is (this|that)"
    "how (easy|hard|simple|difficult) is (this {recipe_syn()}|it)( to {cook_syn()})?"
    "is (this {recipe_syn()}|it) (easy|hard|simple|difficult) to {cook_syn()}"

rule request(rating)
    "what is the rating of this {recipe_syn()}"
    "how is this {recipe_syn()} rated"
    "how many stars does this {recipe_syn()} have"

rule request(type)
    "what kind of dish is this"
    "is (this|that|it) a (dinner|breakfast|lunch) dish"
    "is (this|that|it) suitable for (dinner|breakfast|lunch)"
    "is this a (dinner|breakfast|lunch) dish"


rule request(notes)
    "do I have any notes on that {recipe_syn()}"

rule request(make_it_next)
    "did I mark this as make it next"





# synonyms

function mod_syn()
    "want"
    "plan"
    "need"
    "have"
    "should"

function suggest_syn()
    "suggest"
    "search"
    "give"
    "show"
    "tell"
    "find"
    "look for"
    "fetch"


function cook_syn()
    "prepare"
    "cook"
    "make"
    "follow"
    "do"

function recipe_syn()
    "(some |a )?recipes?"
    "(some |a )?meals?"
    "(some |a )?foods?"
    "something"
